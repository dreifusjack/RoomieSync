services:
  postgres:
    image: postgres:17-alpine
    container_name: roomiesync-postgres-db
    environment:
      POSTGRES_DB: ${PGDATABASE}
      POSTGRES_USER: ${PGUSER}
      POSTGRES_PASSWORD: ${PGPASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - roomiesync-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PGUSER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: roomiesync-springboot-app
    environment:
      PGHOST: postgres
      PGPORT: 5432
      PGDATABASE: ${PGDATABASE}
      PGUSER: ${PGUSER}
      PGPASSWORD: ${PGPASSWORD}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      FRONTEND_URL: ${FRONTEND_URL}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - roomiesync-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: next-frontend
    environment:
      BASE_URL: ${BASE_URL}
      NEXT_PUBLIC_BASE_URL: ${NEXT_PUBLIC_BASE_URL}
    ports:
      - "3000:3000"
    depends_on:
      - app
    networks:
      - roomiesync-network

volumes:
  postgres-data:

networks:
  roomiesync-network:
    driver: bridge